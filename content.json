{"pages":[{"title":"","text":"唐艺昕 李沁 李一桐 gakki 图片搜集于互联网，侵权请留言，马上处理😊。","link":"/album/index.html"},{"title":"","text":"个人简介 分享很喜欢的诫子书： 夫君子之行，静以修身，俭以养德。非淡泊无以明志，非宁静无以致远。夫学须静也，才须学也，非学无以广才，非志无以成学。淫慢则不能励精，险躁则不能冶性。年与时驰，意与日去，遂成枯落，多不接世，悲守穷庐，将复何及！ 💪💪💪💪💪💪加油！！！！ 个人信息： 统计学专业码界小白一枚坚信代码改变世界🤪 博客信息 网站采用的Icarus主题 追求尽可能的简洁，清晰，易用。 在Icarus主题之上进行了部分修改。 本站推荐索引 网易云音乐歌单分享 时间轴记录","link":"/about/index.html"},{"title":"","text":"申请友链须知 原则上只和技术类博客交换，但不包括含有和色情、暴力、政治敏感的网站。 不和剽窃、侵权、无诚信的网站交换，优先和具有原创作品的网站交换。 申请请提供：站点名称、站点链接、站点描述、logo或头像（不要设置防盗链）。 排名不分先后，刷新后重排，更新信息后请留言告知。 会定期清理很久很久不更新的、不符合要求的友链，不再另行通知。 本站不存储友链图片，如果友链图片换了无法更新。图片裂了的会替换成默认图，需要更换的请留言告知。 本站友链信息如下，申请友链前请先添加本站信息： 网站图标：https://longer008.github.io/images/avatar.jpg 网站名称：辣椒の酱 网站地址：https://longer008.github.io 网站简介：日常技术，资料分享 加载中，稍等几秒...","link":"/friend/index.html"},{"title":"","text":"来而不往非礼也畅所欲言，有留必应","link":"/message/index.html"},{"title":"","text":"&nbsp;&nbsp;听听音乐 音乐播放器由mePlayer提供，感谢作者的辛勤付出。更多音乐分享请查看歌单。 &nbsp;&nbsp;看看视频 点击以下条目开始播放视频,向下滑动查看更多","link":"/media/index.html"},{"title":"","text":"碎碎念 tips：github登录后按时间正序查看、可点赞加❤️ 碎碎念加载中，请稍等... $.getScript(\"/js/gitalk_self.min.js\", function () { var gitalk = new Gitalk({ clientID: clientId, clientSecret: clientSecret, id: '666666', repo: 'issue_database', owner: 'longer008', admin: \"longer008\", createIssueManually: true, distractionFreeMode: false }) gitalk.render('comment-container1') });","link":"/self-talking/index.html"},{"title":"音乐歌单收藏","text":"--- 温馨提示：选择喜欢的音乐双击播放，由于版权原因部分不能播放。如果喜欢歌单收藏一下，去网易云都能播放哟！","link":"/music/index.html"}],"posts":[{"title":"RestTemplate 发送post请求","text":"SpringBoot使用RestTemplate发送POST请求的参数有application/json和 FormData两种形式： 参数是json形式，直接使用阿里巴巴的json包 com.alibaba.fastjson ，代码如下： 12345url='http://posturl';JSONObject postData = new JSONObject();postData.put(\"id\", 1);JSONObject result = restTemplate.postForEntity(url, postData, JSONObject.class).getBody();return result; 参数是formdata形式则需要使用RestTemplate发送multipart/form-data格式的数据 对请求头进行设置 1234567String url = 'http://posturl';MultiValueMap&lt;String, String&gt; map= new LinkedMultiValueMap&lt;String, String&gt;();map.add(\"id\",\"1\");HttpHeaders headers = new HttpHeaders();headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED);HttpEntity&lt;MultiValueMap&lt;String, String&gt;&gt; request = new HttpEntity&lt;MultiValueMap&lt;String, String&gt;&gt;(map, headers);return restTemplate.postForEntity(url, request,String.class); 不设置请求头 1234String url = 'http://posturl';MultiValueMap&lt;String, String&gt; map= new LinkedMultiValueMap&lt;String, String&gt;();map.add(\"id\",\"1\");return restTemplate.postForEntity(url, map,String.class);","link":"/posts/b28e6d36/"},{"title":"Beyond Compare 4-文件对比工具","text":"安装和激活2020.4.3号测试此密钥在4.1.6版本仍可正常激活[下载地址]。4.3版本经测试提示密钥被吊销，不能使用。完整内容请点击阅读更多 beyond compare4 密钥123456w4G-in5u3SH75RoB3VZIX8htiZgw4ELilwvPcHAIQWfwfXv5n0IHDp5hv1BM3+H1XygMtiE0-JBgacjE9tz33sIh542EmsGs1yg638UxVfmWqNLqu-Zw91XxNEiZF7DC7-iV1XbSfsgxI8Tvqr-ZMTxlGCJU+2YLveAc-YXs8ciRTtssts7leEbJ979H5v+G0sw-FwP9bjvE4GCJ8oj+jtlp7wFmpVdzovEhv5Vg3dMqhqTiQHKfmHjYbb0o5OUxq0jOWxg5NKim9dhCVF+avO6mDeRNcOYpl7BatIcd6tsiwdhHKRnyGshyVEjSgRCRY11IgyvdRPnbW8UOVULuTE 问题 如果点击帮助-输入密钥跳到购买网址或秘钥Beyond Compare 4输入框闪退问题：删除安装目录下的BCUnrar.dll，然后就可以在 帮助-输入秘钥弹出秘钥框 永久使用需删除C:\\Users\\user\\AppData\\Roaming\\Scooter Software\\Beyond Compare 4目录。","link":"/posts/ff86c3c7/"},{"title":"github Issue 作为博客微型数据库的应用","text":"背景众所周知，对于hexo框架搭建的静态博客，难免会产生一些动态的数据，比如一些碎碎念、友链、音乐、时间轴等微型数据。目前一般的做法: a.是创建一个json数据，来存储这些微型数据，但是如果数据太多的话，一是比较慢，二是有个硬伤问题，就是json数据不能分页请求，只能一次拿完，太多的话网络带宽占用太多。 b.或者有的直接后台写一些接口服务啥的，还得在买个服务器部署上去，然后博客中访问接口。 c.或者有些可能就直接写到html中。 对于a、c方法都比较麻烦，每次更新了都要编译部署，不能很方便的动态更新。对于b的话，成本以及技术要求可能就更多一些了。 基于上面出现的问题，目前想到的一个解决方案就是，利用github 的issue作为一个微型数据库。能够很方便的动态更新，也能分页，也不需要啥json文件，想想都很方便。 issue数据库使用步骤issue的创建先创建一个Repository，对于此Repository可以专门作为微型的数据库，取名issue_database。创建好之后建立一些issue 如下所示 目前博客中，所有的动态数据都放到issue中了。 issue中存储数据对于创建好的issue，就可以往里面写数据了，比如我的友链数据为issue：blog_friends 对于issue中存储的数据最好存json格式的，因为可以方便后面取出来使用。存储好数据后，如果太多的话，可以点击hide,隐藏起来。同时这个issue最好给Lock conversation这样的好处是，防止别人往里面加些脏数据，只能自己往里写数据。哈哈，一般也没有闲的无聊的网友恶作剧。这样就存储好数据了。 博客中获取issue数据博客中通过js获取issue中的数据，以博客友链为例，以下是获取代码，以及处理 123456789101112131415161718// author by walter// https://removeif.github.io/$(function () { //获取处理友链数据，来自issue，一次取完 $.getJSON(\"https://api.github.com/repos/removeif/issue_database/issues/2/comments?per_page=100&amp;client_id=46a9f3481b46ea0129d8&amp;client_secret=79c7c9cb847e141757d7864453bcbf89f0655b24\", function (source) { var data = []; var source1; source1 = source; // 以后每次更新的都在后面，此处倒序，按时间降序排 source1.reverse(); // 把所有的数据放到data的列表中 $.each(source1, function (i, e) { data.push(...JSON.parse(e.body)); }); $.each(data, function (i, e) { // 博客中html文件的构建，渲染 });}); 上面代码中client_id、client_secret在另一篇文章中博客源码分享有详细的说明,可以查看一下。这样就能获取到相应的数据，进行操作。 issue数据的更新比如想更新任意一项数据都可以进github中对应的仓库的issue下进行更新，添加。然后实时去博客中查看。 扩展一下对于有些爱唠叨的人（比如我），弄个类似碎碎念的东西就比较实用了。之前想过各种方案，存json数据太不方便；后台写个服务部署服务器也太麻烦。最后思来想去还是利用了下现成的优秀项目gitalk,稍稍改改就能很好使用。 博客中的碎碎念对于博主而言，有发表框和修改的操作，能够方便发表和修改。 可能有时候还会发表一些图片，对图片的样式做了一些控制 对于网友的话只能查看以及点赞加❤️ 做法就是源码中改下返回html的文件内容，如果是管理员和非管理员返回一些不同的元素，能够很好的实现碎碎念的功能。查看碎碎念。 总结静态博客的动态数据是个痛点，GitHub Issue有很多可利用的地方。多去探索发掘其中的奥妙。 利用GitHub Issue来解决目前也是一种解决方法。希望后面会出现更好的解决方案。","link":"/posts/e7fe3cc/"},{"title":"全网VIP视频免费看（电脑端and移动端）","text":"条件设施硬件需求：一台电脑（手机也可以，请看后文）。 软件需求：一个可以安装扩展的浏览器（不是客户端）。Chrome，Microsoft Edge，Safari，Opera Next，Firefox都可以，我用的是Chrome浏览器。 需要安装Chrome浏览器的可以点下面链接下载安装 https://www.google.cn/chrome/ 电脑端安装Tampermonkey（油猴）介绍：一个用户脚本管理器 对于有条件的同学可以直接前往Chrome网上应用店下载 点添加至Chrome即可。 对于没条件的同学对于没条件的同学（打不开上面链接）也不用担心，我已经准备好了，有两种方法安装（建议使用第2种） crx格式安装 复制 https://lanzous.com/ib97oxe 下载即可 然后打开Chrome浏览器，点击 “X”（关闭）按钮下面的三个点，找到“更多工具–&gt;扩展程序”并打开。 然后右上方点击切换按钮打开“开发者模式”，会出现以下内容 直接将下载的文件——“4.9_0.crx”拖入当前窗口即可 如果报下面错误或其他错误 请使用第二种方法 解压压缩包安装 打开链接：https://lanzous.com/ib9ucbi 下载完成后直接解压 注意： 别忘了解压到哪个目录哦，也不要随便放 如果解压报错请更换解压工具（建议使用bandzip） 然后在“开发者模式”中点击“加载已解压的扩展程序”，找到刚解压的目录，比如我解压到桌面了（不建议随便放） 以上就完成了油猴扩展的安装，下面安装用户脚本。 安装用户脚本献上很有名的用户脚本网站Greasy Fork，在这个网站中我们可以找到很多好玩有趣的脚本。 我就先点击“脚本列表了”，正好，第一个就是看视频的，那就安装它吧。 点击标题链接进入详情页面 如果之前没有安装过这个脚本的话直接点击“安装此脚本”即可，接下来会跳转到油猴脚本管理器界面，点击安装。 检查是否安装成功和是否启用点击油猴插件图标，下图的标号1，标号2是我安装的另一个插件，不用管，点击标号3进入管理面板 如果显示已启用就说明安装成功了，接下来我们测试一下，以xx视频为例，其他的一样： 进入xx视频网页版，找一个VIP才能看的视频，我选了目前比较火的“龙岭迷窟” 进来后发现第7集只能会员播放，于是选择第7集 这时如果你没有登录或你不是会员的话会弹出一个框，直接关闭就行了 最后点击最左边的红色的显示VIP字样小框。（此时你会发现油猴图标发生了变化） 点击左侧VIP后会打开一个新的标签页，点击中间的三角按钮（播放键）即可播放 如果解析失败可以切换线路。 移动端目前移动端的Chrome浏览器还不支持安装扩展 Firefox浏览器安装扩展 还是点击首页右上角的三个点，然后点击附加组件–&gt;浏览Firefox推荐的扩展就可以看到各种组建了，选择自己喜欢的进行安装。如果找不到油猴插件请继续下面步骤（刚进去我没有找到油猴插件，后面摸索发现需要设置一下） 此时（Firefox推荐的扩展界面）继续点击那三个点，勾选“要求桌面版网站”(勾选完界面会刷新)，很重要!!!。此时界面应该是： 搜索油猴插件，我输入的是”tam” 进去后安装即可，安装油猴插件和用户脚本的步骤与电脑端一样，脚本还是Greasy Fork这个网站。安装完成后点三个点–&gt;附加组件可以查看我们安装的组件。 测试 最后就是观看啦[/开心] ​ 有些同学反映Firefox安装的和我的不一样（IOS系统），建议在Google Play安装，其他可以安装扩展的移动端浏览器如Yandex，Kiwi Browser 都在可以在Google Play找到。 总结 虽然这篇文章标题叫“手把手教你看全网VIP视频”，但看电影只用了一个小小的脚本，其他好玩的脚本还有很多，等着我们去探索。 在此感谢各位插件/脚本开发者，先膜拜一下。 我写这篇文章的目的是为了电脑小白也能看得懂，有的地方可能有些啰嗦，望大家见谅。如果有同学有不明白的地方可以找我。","link":"/posts/f7c57280/"}],"tags":[{"name":"开发教程","slug":"开发教程","link":"/tags/%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/"},{"name":"SpringBoot","slug":"SpringBoot","link":"/tags/SpringBoot/"},{"name":"RestTemplate","slug":"RestTemplate","link":"/tags/RestTemplate/"},{"name":"工具教程","slug":"工具教程","link":"/tags/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/"}],"categories":[{"name":"开发教程","slug":"开发教程","link":"/categories/%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/"},{"name":"工具教程","slug":"工具教程","link":"/categories/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/"},{"name":"SpringBoot","slug":"开发教程/SpringBoot","link":"/categories/%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/SpringBoot/"},{"name":"软件工具","slug":"工具教程/软件工具","link":"/categories/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"},{"name":"主题工具","slug":"工具教程/主题工具","link":"/categories/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/%E4%B8%BB%E9%A2%98%E5%B7%A5%E5%85%B7/"},{"name":"视频","slug":"工具教程/视频","link":"/categories/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/%E8%A7%86%E9%A2%91/"}]}